function(f, edition_year){
print(f)
df <- read_dta(
glue('{path2data}/{f}')
) %>%
select(
question, year, longitudinal, id_alex, country,
all_of(scores)
) %>%
mutate(
edition = as.double(edition_year),
roli    = rowMeans(
across(scores[1:7]), na.rm = TRUE
),
distance2edition = if_else(
edition > 2020,
edition-year,
edition-(year+1)
)
)
}
)
}
)
data <- lapply(
c('raw'   = raw_files,
'clean' = clean_files),
function(stage_files){
year_data <- imap(
stage_files,
function(f, edition_year){
print(f)
df <- read_dta(
glue('{path2data}/{f}')
) %>%
select(
question, year, longitudinal, id_alex, country,
all_of(scores)
) %>%
mutate(
edition = as.double(edition_year),
roli    = rowMeans(
across(scores[1:7]), na.rm = TRUE
),
distance2edition = if_else(
edition > 2020,
edition-year,
edition-(year+1)
)
)
}
)
bind_rows(year_data)
}
)
View(data)
View(data[["raw.2020"]])
data <- lapply(
c('raw'   = raw_files,
'clean' = clean_files),
function(stage_files){
year_data <- imap(
stage_files,
function(f, edition_year){
print(f)
df <- read_dta(
glue('{path2data}/{f}')
) %>%
select(
question, year, longitudinal, id_alex, country,
all_of(scores)
) %>%
mutate(
edition = as.double(edition_year),
roli    = rowMeans(
across(scores[1:7]), na.rm = TRUE
),
distance2edition = if_else(
edition > 2020,
edition-year,
edition-(year+1)
)
)
}
)
}
)
View(data)
year_data <- imap(
raw_files,
function(f, edition_year){
print(f)
df <- read_dta(
glue('{path2data}/{f}')
) %>%
select(
question, year, longitudinal, id_alex, country,
all_of(scores)
) %>%
mutate(
edition = as.double(edition_year),
roli    = rowMeans(
across(scores[1:7]), na.rm = TRUE
),
distance2edition = if_else(
edition > 2020,
edition-year,
edition-(year+1)
)
)
}
)
View(year_data)
year_data <- imap(
raw_files,
function(f, edition_year){
print(f)
df <- read_dta(
glue('{path2data}/{f}')
) %>%
select(
question, year, longitudinal, id_alex, country,
all_of(scores)
) %>%
mutate(
edition = as.double(edition_year),
roli    = rowMeans(
across(scores[1:7]), na.rm = TRUE
),
distance2edition = if_else(
edition > 2020,
edition-year,
edition-(year+1)
)
)
}
) %>%
reduce(bind_rows)
View(year_data)
data <- lapply(
c('raw'   = raw_files,
'clean' = clean_files),
function(stage_files){
year_data <- imap(
stage_files,
function(f, edition_year){
print(f)
df <- read_dta(
glue('{path2data}/{f}')
) %>%
select(
question, year, longitudinal, id_alex, country,
all_of(scores)
) %>%
mutate(
edition = as.double(edition_year),
roli    = rowMeans(
across(scores[1:7]), na.rm = TRUE
),
distance2edition = if_else(
edition > 2020,
edition-year,
edition-(year+1)
)
)
}
) %>%
reduce(bind_rows)
}
)
View(data)
data <- lapply(
c('raw'   = raw_files,
'clean' = clean_files),
function(stage_files){
imap(
stage_files,
function(f, edition_year){
print(f)
df <- read_dta(
glue('{path2data}/{f}')
) %>%
select(
question, year, longitudinal, id_alex, country,
all_of(scores)
) %>%
mutate(
edition = as.double(edition_year),
roli    = rowMeans(
across(scores[1:7]), na.rm = TRUE
),
distance2edition = if_else(
edition > 2020,
edition-year,
edition-(year+1)
)
)
}
) %>%
reduce(bind_rows)
}
)
data <- lapply(
c('raw'   = raw_files,
'clean' = clean_files),
function(stage_files){
print(stage_files)
# imap(
#   stage_files,
#   function(f, edition_year){
#
#     print(f)
#
#     df <- read_dta(
#       glue('{path2data}/{f}')
#     ) %>%
#       select(
#         question, year, longitudinal, id_alex, country,
#         all_of(scores)
#       ) %>%
#       mutate(
#         edition = as.double(edition_year),
#         roli    = rowMeans(
#           across(scores[1:7]), na.rm = TRUE
#         ),
#         distance2edition = if_else(
#           edition > 2020,
#           edition-year,
#           edition-(year+1)
#         )
#       )
#   }
# ) %>%
#   reduce(bind_rows)
#
}
)
data <- lapply(
list('raw'   = raw_files,
'clean' = clean_files),
function(stage_files){
print(stage_files)
# imap(
#   stage_files,
#   function(f, edition_year){
#
#     print(f)
#
#     df <- read_dta(
#       glue('{path2data}/{f}')
#     ) %>%
#       select(
#         question, year, longitudinal, id_alex, country,
#         all_of(scores)
#       ) %>%
#       mutate(
#         edition = as.double(edition_year),
#         roli    = rowMeans(
#           across(scores[1:7]), na.rm = TRUE
#         ),
#         distance2edition = if_else(
#           edition > 2020,
#           edition-year,
#           edition-(year+1)
#         )
#       )
#   }
# ) %>%
#   reduce(bind_rows)
#
}
)
data <- lapply(
list('raw'   = raw_files,
'clean' = clean_files),
function(stage_files){
print(stage_files)
imap(
stage_files,
function(f, edition_year){
print(f)
df <- read_dta(
glue('{path2data}/{f}')
) %>%
select(
question, year, longitudinal, id_alex, country,
all_of(scores)
) %>%
mutate(
edition = as.double(edition_year),
roli    = rowMeans(
across(scores[1:7]), na.rm = TRUE
),
distance2edition = if_else(
edition > 2020,
edition-year,
edition-(year+1)
)
)
}
) %>%
reduce(bind_rows)
}
)
View(data[["raw"]])
library(readr)
?write_csv
data <- imap(
list('raw'   = raw_files,
'clean' = clean_files),
function(stage_files, stage){
stage_data <- imap(
stage_files,
function(f, edition_year){
print(f)
df <- read_dta(
glue('{path2data}/{f}')
) %>%
select(
question, year, longitudinal, id_alex, country,
all_of(scores)
) %>%
mutate(
edition = as.double(edition_year),
roli    = rowMeans(
across(scores[1:7]), na.rm = TRUE
),
distance2edition = if_else(
edition > 2020,
edition-year,
edition-(year+1)
)
)
}
) %>%
reduce(bind_rows)
write_csv(df, glue('../data/{stage}_qrq.csv'))
}
)
data <- imap(
list('raw'   = raw_files,
'clean' = clean_files),
function(stage_files, stage){
stage_data <- imap(
stage_files,
function(f, edition_year){
print(f)
df <- read_dta(
glue('{path2data}/{f}')
) %>%
select(
question, year, longitudinal, id_alex, country,
all_of(scores)
) %>%
mutate(
edition = as.double(edition_year),
roli    = rowMeans(
across(scores[1:7]), na.rm = TRUE
),
distance2edition = if_else(
edition > 2020,
edition-year,
edition-(year+1)
)
)
}
) %>%
reduce(bind_rows)
df <- as.data.frame(df)
write_csv(df, glue('../data/{stage}_qrq.csv'))
}
)
data <- imap(
list('raw'   = raw_files,
'clean' = clean_files),
function(stage_files, stage){
stage_data <- imap(
stage_files,
function(f, edition_year){
print(f)
df <- read_dta(
glue('{path2data}/{f}')
) %>%
select(
question, year, longitudinal, id_alex, country,
all_of(scores)
) %>%
mutate(
edition = as.double(edition_year),
roli    = rowMeans(
across(scores[1:7]), na.rm = TRUE
),
distance2edition = if_else(
edition > 2020,
edition-year,
edition-(year+1)
)
)
}
) %>%
reduce(bind_rows)
# df <- as.data.frame(df)
# write_csv(df, glue('../data/{stage}_qrq.csv'))
}
)
class(data$raw)
as.data.frame(data$raw)
data <- imap(
list('raw'   = raw_files,
'clean' = clean_files),
function(stage_files, stage){
stage_data <- imap(
stage_files,
function(f, edition_year){
print(f)
df <- read_dta(
glue('{path2data}/{f}')
) %>%
select(
question, year, longitudinal, id_alex, country,
all_of(scores)
) %>%
mutate(
edition = as.double(edition_year),
roli    = rowMeans(
across(scores[1:7]), na.rm = TRUE
),
distance2edition = if_else(
edition > 2020,
edition-year,
edition-(year+1)
)
)
}
) %>%
reduce(bind_rows)
# df <- as.data.frame(df)
write_csv(df, glue('../data/{stage}_qrq.csv'))
}
)
is.data.frame(data$raw)
data <- imap(
list('raw'   = raw_files,
'clean' = clean_files),
function(stage_files, stage){
stage_data <- imap(
stage_files,
function(f, edition_year){
print(f)
df <- read_dta(
glue('{path2data}/{f}')
) %>%
select(
question, year, longitudinal, id_alex, country,
all_of(scores)
) %>%
mutate(
edition = as.double(edition_year),
roli    = rowMeans(
across(scores[1:7]), na.rm = TRUE
),
distance2edition = if_else(
edition > 2020,
edition-year,
edition-(year+1)
)
)
}
) %>%
reduce(bind_rows)
write_csv(stage_data, glue('../data/{stage}_qrq.csv'))
}
)
View(x)
data <- imap(
list('raw'   = raw_files,
'clean' = clean_files),
function(stage_files, stage){
stage_data <- imap(
stage_files,
function(f, edition_year){
print(f)
df <- read_dta(
glue('{path2data}/{f}')
) %>%
select(
question, year, longitudinal, id_alex, country,
all_of(scores)
) %>%
mutate(
edition = as.double(edition_year),
roli    = rowMeans(
across(scores[1:7]), na.rm = TRUE
),
year = if_else(
edition > 2020,
year,
year+1
),
unid = paste(edition, id_alex, sep = '_')
) %>%
select(unid, edition, country, year, question, longitudinal, roli, all_of(scores))
}
) %>%
reduce(bind_rows)
write_csv(stage_data, glue('../data/{stage}_qrq.csv'))
}
)
View(data)
View(data[["clean"]])
View(data)
View(data[["raw"]])
